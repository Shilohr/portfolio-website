# Database Configuration
DB_HOST=db
DB_USER=portfolio
DB_PASSWORD=generate-secure-32-char-password-here
DB_NAME=portfolio
DB_ROOT_PASSWORD=generate-secure-32-char-root-password-here

# JWT Configuration
# IMPORTANT: Generate a secure random string of at least 64 characters for production
# Use: openssl rand -hex 32 or node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=generate-secure-64-char-jwt-secret-here-minimum-length-required

# Application Configuration
NODE_ENV=production
PORT=3000

# Security Configuration
CORS_ORIGIN=https://shilohrobinson.dev
ALLOWED_HOSTS=shilohrobinson.dev,www.shilohrobinson.dev

# GitHub Configuration
GITHUB_USERNAME=shilohrobinson
GITHUB_TOKEN=your-github-personal-access-token

# Email Configuration (for password reset, etc.)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Docker Security Configuration
# REQUIRED FOR PRODUCTION:
# - JWT_SECRET must be at least 64 characters (cryptographically secure)
# - DB_PASSWORD must be at least 32 characters (cryptographically secure)
# - DB_ROOT_PASSWORD must be at least 32 characters (cryptographically secure)
# - All secrets must be unique and randomly generated
# 
# DOCKER SECURITY FEATURES ENFORCED:
# - Multi-stage builds with minimal attack surface
# - Non-root user execution (UID 1001)
# - Read-only filesystem with tmpfs for temporary data
# - Resource limits (CPU, memory)
# - Security options (no-new-privileges, capability dropping)
# - Health checks for monitoring
# - Network isolation with custom bridge network
# - Secrets management through environment variables